# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Deliver file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.QUACK_RUN_SSH_HOST }}
          username: ${{ secrets.QUACK_RUN_SSH_USERNAME }}
          key: ${{ secrets.QUACK_RUN_SSH_KEY }}
          port: ${{ secrets.QUACK_RUN_SSH_PORT }}
          source: "build/libs/*.jar"
          target: "source"
          rm: true
      - name: Deploy new version of server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.QUACK_RUN_SSH_HOST }}
          username: ${{ secrets.QUACK_RUN_SSH_USERNAME }}
          key: ${{ secrets.QUACK_RUN_SSH_KEY }}
          port: ${{ secrets.QUACK_RUN_SSH_PORT }}
          script: |
            export DB_HOST=${{ secrets.DB_HOST }}
            export DB_USERNAME=${{ secrets.DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export BOT_USER_OAUTH_TOKEN=${{ secrets.BOT_USER_OAUTH_TOKEN }}
            export ACTIVE_PROFILE=${{ secrets.ACTIVE_PROFILE }}
            export MAIL_SENDER=${{ secrets.MAIL_SENDER }}
            export MAIL_APP_PASSWORD=${{ secrets.MAIL_APP_PASSWORD }}
            
            docker stop status-page-api || true
            docker rm status-page-api || true
            docker rmi status-page-image || true
            
            docker build -t status-page-image .

            docker run -d -p 8080:8080 --name status-page-api -e SPRING_PROFILES_ACTIVE=$ACTIVE_PROFILE status-page-image:latest

  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run tests
        run: ./gradlew test
